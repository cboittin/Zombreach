<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>self.cell = noone;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(self.cell != noone) {
    draw_set_colour(c_black);
    draw_set_font(global.pixelFont);
    // Unit
    if(cell.unit != noone) {
        var type = cell.unit.characterType;
        // Type and hp
        switch(type) {
        case global.CH_ZOMBIE:
            draw_text(x + 2, y - 10, "Zombie"); break;
        case global.CH_PLAYABLE:
            draw_text(x + 2, y - 10, "Character"); break;
        case global.CH_NPC_ALLY:
            draw_text(x + 2, y - 10, "Friendly"); break;
        case global.CH_NPC_ENEMY:
            draw_text(x + 2, y - 10, "Enemy"); break;
        default:
            show_debug_message("Couldn't recognize character type");
        }
        draw_text(x + 109, y - 10, "HP: " + string(cell.unit.hp));
        
        // Weapon 
        if(instance_exists(cell.unit.weapon)) {
            draw_text(x + 2, y + 2, cell.unit.weapon.name);
            var totalDamage = cell.unit.weapon.damage;
            if(cell.unit.weapon.weaponType &amp; global.WEAPON_USE_STRENGTH)
                totalDamage += cell.unit.strength
            draw_text(x + 95, y + 2, "Dam. " + string(totalDamage));
        }
        // Statuses
        
        // FIXME y + 14
    }
    
    // Prop
    if(instance_exists(cell.prop)) {
        var prop = cell.prop;
        draw_text(x + 2, y + 24, prop.name);
    
        var type = prop.propType;
        switch(type) {
        // Weapon
        case global.PROP_WEAPON:
            var weapon = prop.weapon;
            draw_text(x + 95, y + 24, "Dam. " + string(weapon.damage));

            var rangeStr = "Range " + string(weapon.range);
            if(weapon.rangeType &amp; global.RANGE_LINE)
                rangeStr += " Line";
            if(weapon.rangeType &amp; global.RANGE_JUMP_1)
                rangeStr += " Jump 1";
            if(weapon.rangeType &amp; global.RANGE_SELF)
                rangeStr += " Self";
            if(weapon.rangeType &amp; global.RANGE_SQUARE)
                rangeStr += " Square";
            draw_text(x + 2, y + 36, rangeStr);
            
            break;
        // Collectible
        case global.PROP_COLLECTIBLE:
            break;
        // Furniture
        case global.PROP_FURNITURE:
            break;
        // Usable
        case global.PROP_USABLE:
            break;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
